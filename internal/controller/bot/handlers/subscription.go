package handlers

import (
	"context"
	"fmt"

	"3xui-bot/internal/usecase"
	"3xui-bot/internal/interfaces"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

// SubscriptionHandler –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /subscription
type SubscriptionHandler struct {
	interfaces.BaseHandlerInterface
	UseCaseManager *usecase.UseCaseManager
}

// NewSubscriptionHandler —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /subscription
func NewSubscriptionHandler(useCaseManager *usecase.UseCaseManager) *SubscriptionHandler {
	return &SubscriptionHandler{
		UseCaseManager: useCaseManager,
	}
}

// Handle –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /subscription
func (h *SubscriptionHandler) Handle(ctx context.Context, update tgbotapi.Update) error {
	userID := h.GetUserID(update)
	chatID := h.GetChatID(update)

	// –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–¥–ø–∏—Å–∫–µ
	subscriptionInfo, err := h.UseCaseManager.GetSubscriptionUseCase().GetActiveSubscription(ctx, userID)
	if err != nil {
		// –ï—Å–ª–∏ –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–µ—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã –ø—Ä–æ–¥–ª–µ–Ω–∏—è
		return h.handleNoActiveSubscription(ctx, chatID, userID)
	}

	// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–¥–ø–∏—Å–∫–µ
	return h.sendSubscriptionInfo(ctx, chatID, subscriptionInfo)
}

// handleNoActiveSubscription –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–ª—É—á–∞–π, –∫–æ–≥–¥–∞ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏
func (h *SubscriptionHandler) handleNoActiveSubscription(ctx context.Context, chatID, userID int64) error {
	message := `
üí≥ <b>–ü–æ–¥–ø–∏—Å–∫–∞</b>

‚ùå –£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏

üí° <b>–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∞—Ä–∏—Ñ–Ω—ã–π –ø–ª–∞–Ω:</b>

<b>üìÖ 1 –º–µ—Å—è—Ü</b>
üí∞ –¶–µ–Ω–∞: 100 —Ä—É–±.
‚è∞ –°—Ä–æ–∫: 30 –¥–Ω–µ–π

<b>üìÖ 3 –º–µ—Å—è—Ü–∞</b>
üí∞ –¶–µ–Ω–∞: 250 —Ä—É–±.
‚è∞ –°—Ä–æ–∫: 90 –¥–Ω–µ–π
üí∏ <b>–≠–∫–æ–Ω–æ–º–∏—è: 50 —Ä—É–±.</b>

<b>üìÖ 6 –º–µ—Å—è—Ü–µ–≤</b>
üí∞ –¶–µ–Ω–∞: 450 —Ä—É–±.
‚è∞ –°—Ä–æ–∫: 180 –¥–Ω–µ–π
üí∏ <b>–≠–∫–æ–Ω–æ–º–∏—è: 150 —Ä—É–±.</b>

<b>üìÖ 1 –≥–æ–¥</b>
üí∞ –¶–µ–Ω–∞: 800 —Ä—É–±.
‚è∞ –°—Ä–æ–∫: 365 –¥–Ω–µ–π
üí∏ <b>–≠–∫–æ–Ω–æ–º–∏—è: 400 —Ä—É–±.</b>
`

	keyboard := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üìÖ 1 –º–µ—Å—è—Ü - 100‚ÇΩ", "subscription_1_month"),
			tgbotapi.NewInlineKeyboardButtonData("üìÖ 3 –º–µ—Å—è—Ü–∞ - 250‚ÇΩ", "subscription_3_months"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üìÖ 6 –º–µ—Å—è—Ü–µ–≤ - 450‚ÇΩ", "subscription_6_months"),
			tgbotapi.NewInlineKeyboardButtonData("üìÖ 1 –≥–æ–¥ - 800‚ÇΩ", "subscription_1_year"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üéÅ –ü—Ä–æ–º–æ–∫–æ–¥", "promocode"),
			tgbotapi.NewInlineKeyboardButtonData("üë• –†–µ—Ñ–µ—Ä–∞–ª—ã", "referral"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "main_menu"),
		),
	)

	return h.SendMessage(ctx, chatID, message, keyboard)
}

// sendSubscriptionInfo –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–¥–ø–∏—Å–∫–µ
func (h *SubscriptionHandler) sendSubscriptionInfo(ctx context.Context, chatID int64, subscriptionInfo *usecase.SubscriptionInfo) error {
	message := fmt.Sprintf(`
üí≥ <b>–ü–æ–¥–ø–∏—Å–∫–∞</b>

‚úÖ <b>–°—Ç–∞—Ç—É—Å:</b> –ê–∫—Ç–∏–≤–Ω–∞
üìÖ <b>–î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ:</b> %s
‚è∞ <b>–û—Å—Ç–∞–ª–æ—Å—å –¥–Ω–µ–π:</b> %d

<b>VPN –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ:</b>
`,
		subscriptionInfo.ExpiresAt.Format("02.01.2006 15:04"),
		subscriptionInfo.DaysRemaining,
	)

	if subscriptionInfo.VPNConnection != nil {
		message += fmt.Sprintf(`
‚úÖ <b>–°—Ç–∞—Ç—É—Å:</b> –ê–∫—Ç–∏–≤–Ω–æ
üîó <b>–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:</b> <code>%s</code>
`, subscriptionInfo.VPNConnection.ConfigURL)
	} else {
		message += `
‚ùå <b>–°—Ç–∞—Ç—É—Å:</b> –ù–µ–∞–∫—Ç–∏–≤–Ω–æ
üí° –°–æ–∑–¥–∞–π—Ç–µ VPN –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –≤ —Ä–∞–∑–¥–µ–ª–µ "VPN"
`
	}

	// –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–¥–ª–µ–Ω–∏–∏
	if subscriptionInfo.DaysRemaining <= 7 {
		message += `
‚ö†Ô∏è <b>–í–Ω–∏–º–∞–Ω–∏–µ!</b> –ü–æ–¥–ø–∏—Å–∫–∞ —Å–∫–æ—Ä–æ –∏—Å—Ç–µ–∫–∞–µ—Ç!
üí≥ –ü—Ä–æ–¥–ª–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É, —á—Ç–æ–±—ã –Ω–µ –ø–æ—Ç–µ—Ä—è—Ç—å –¥–æ—Å—Ç—É–ø –∫ VPN
`
	}

	keyboard := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üí≥ –ü—Ä–æ–¥–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", "subscription_extend"),
			tgbotapi.NewInlineKeyboardButtonData("üîó VPN –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ", "vpn"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üéÅ –ü—Ä–æ–º–æ–∫–æ–¥", "promocode"),
			tgbotapi.NewInlineKeyboardButtonData("üë• –†–µ—Ñ–µ—Ä–∞–ª—ã", "referral"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üìä –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å", "profile"),
			tgbotapi.NewInlineKeyboardButtonData("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "main_menu"),
		),
	)

	return h.SendMessage(ctx, chatID, message, keyboard)
}

// Command –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
func (h *SubscriptionHandler) Command() string {
	return "subscription"
}

// Description –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
func (h *SubscriptionHandler) Description() string {
	return "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–æ–π"
}
